<?xml version="1.0" encoding="GBK"?>
<beans xmlns="http://www.springframework.org/schema/beans"  
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
    xmlns:aop="http://www.springframework.org/schema/aop"  
    xmlns:context="http://www.springframework.org/schema/context" 
    xmlns:tx="http://www.springframework.org/schema/tx"  
    xmlns:jpa="http://www.springframework.org/schema/data/jpa"  
    xmlns:security="http://www.springframework.org/schema/security" 
    xmlns:mvc="http://www.springframework.org/schema/mvc" 
    xsi:schemaLocation="  
        http://www.springframework.org/schema/aop   
        http://www.springframework.org/schema/aop/spring-aop-4.0.xsd  
        http://www.springframework.org/schema/security   
        http://www.springframework.org/schema/security/spring-security-3.2.xsd  
        http://www.springframework.org/schema/beans   
        http://www.springframework.org/schema/beans/spring-beans-4.0.xsd  
        http://www.springframework.org/schema/data/jpa   
        http://www.springframework.org/schema/data/jpa/spring-jpa-1.3.xsd  
        http://www.springframework.org/schema/tx   
        http://www.springframework.org/schema/tx/spring-tx-4.0.xsd  
        http://www.springframework.org/schema/mvc   
    	http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
        http://www.springframework.org/schema/context   
        http://www.springframework.org/schema/context/spring-context-4.0.xsd">
       
       
       
       <!-- 对项目中的所有类进行扫描以完成Bean创建并进行自动注入。  
	          支持 @Controller、@Service 以及 @Repository 和 @Component -->
		<!-- 扫描项目中com.fh.shop.controller包下所有的类，从而使类中的@Controller注解生效 -->
	    <context:component-scan base-package="com.fh.shop.admin.controller"/>
       
       <!-- 使responseBody注解生效 -->
       <mvc:annotation-driven />
       
       
       <!-- 配置切面类的bean标签，来连接日志切面类 -->
       <context:component-scan base-package="com.fh.shop.admin.logaspect"/>
       <!-- 通过配置使日志切面类生效 -->
       <aop:config>
       		<!-- 通过ref指明要配置的日志切面类的bean -->
       		<aop:aspect ref="logAspect">
       			<!-- 配置切点表达式，指明要对哪些类的哪些方法进行拦截 -->
       			<aop:pointcut expression="execution(* com.fh.shop.admin.controller..*.*(..))" id="poincut"/>
       			<!-- 通过pointcut-ref 指明通过切面类中的哪个方法来对切点表达式指定的地方进行日志记录 -->
       			<aop:around method="around" pointcut-ref="poincut"/>
       		</aop:aspect>
       </aop:config>
       
       <!-- 拦截器 -->
		<mvc:interceptors>
		  <mvc:interceptor>
		  		<!--&lt;!&ndash; 要拦截的类或方法 &ndash;&gt;-->
		  		<mvc:mapping path="/**"/>
				<!--&lt;!&ndash; 指明拦截器的类 &ndash;&gt;-->
		  		<bean class="com.fh.shop.admin.loginInterceptor.Interceptor"></bean>
		  </mvc:interceptor>
   	 </mvc:interceptors>
       
       <!--
		jsp视图解析器，对模型视图名称的解析，即在模型视图名称添加前后缀
       	 如/view/welcome.jsp对应的视图名就是：welcome
		 这个类在视图解析器链中一定要定义在其他视图的后面，因为它始终会返回一个视图
		-->
	    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
	        <property name="prefix" value="/WEB-INF/view/"/>
	        <property name="suffix" value=".jsp"/>
	    </bean>
    	
    	
    	
    	<!--自定义消息转换器的编码,解决后台传输json回前台时，中文乱码问题-->
	    <mvc:annotation-driven>
	        <mvc:message-converters register-defaults="true">
	            <bean class="org.springframework.http.converter.StringHttpMessageConverter">
	                <property name="supportedMediaTypes">
	                    <list>
	                        <value>application/json;charset=utf-8</value>
	                        <value>text/html;charset=utf-8</value>
	                        <!-- application 可以在任意 form 表单里面 enctype 属性默认找到 -->
	                        <value>application/x-www-form-urlencoded</value>
	                    </list>
	                </property>
	            </bean>
	            <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter"></bean>
	        </mvc:message-converters>
	    </mvc:annotation-driven>



	<!-- 文件上传下载  -->
	<bean id="multipartResolver"
		  class="org.springframework.web.multipart.commons.CommonsMultipartResolver"> <!--允许上传文件大小 -->
		<property name="maxUploadSize" value="104857600000" />
		<!--缓存大小 -->
		<property name="maxInMemorySize" value="4096" />
		<property name="defaultEncoding" value="UTF-8"></property>
	</bean>
</beans>